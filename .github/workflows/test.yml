---
name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  STABLE_PYTHON_VERSION: '3.13'
  PYTEST_ADDOPTS: --color=yes
  HATCH_VERBOSE: '1'
  FORCE_COLOR: '1'

jobs:
  complete:
    name: Test completion check
    if: always()

    permissions:
      contents: none

    runs-on: ubuntu-latest
    needs:
      - format
      - lint
      - pre-commit
      - spelling
      - test
      - typecheck

    steps:
      - name: Failed
        run: exit 1
        if: >
          contains(needs.*.result, 'failure') ||
          contains(needs.*.result, 'cancelled') ||
          contains(needs.*.result, 'skipped')

  format:
    name: Format

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb  # v6.1.0
        with:
          enable-cache: true

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install hatch
        run: uv tool install hatch

      - name: Format
        run: |
          if ! hatch run format --check ; then
            {
              echo "## Formatting changes"
              echo '```diff'
              hatch run format --diff
              echo '```'
            } >>"$GITHUB_STEP_SUMMARY"
            exit 1
          fi

  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb  # v6.1.0
        with:
          enable-cache: true

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install hatch
        run: uv tool install hatch

      - name: Lint
        run: hatch run lint --output-format github

  spelling:
    name: Spell check

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Spell Check Repo
        uses: crate-ci/typos@b1ae8d918b6e85bd611117d3d9a3be4f903ee5e4  # v1.33.1

  pre-commit:
    name: Pre-commit

    runs-on: ubuntu-latest

    env:
      PRE_COMMIT_HOME: ${{ github.workspace }}/.pre-commit

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Cache pre-commit
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
        with:
          path: |
            ${{ env.PRE_COMMIT_HOME }}
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb  # v6.1.0
        with:
          enable-cache: true

      - name: Install pre-commit
        run: uv tool install pre-commit

      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files

  test:
    name: >-
      Test ${{ matrix.python-version }}
      on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
        experimental:
          - false
        include:
            # Run tests against the next Python version, but no need for the full list of OSes.
          - os: ubuntu-latest
            python-version: '3.14'
            experimental: true

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          submodules: true

      - name: Set up uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb  # v6.1.0
        with:
          enable-cache: true

      - name: Install Python
        run: uv python install ${{ matrix.python-version }}

      - name: Run tests
        run: echo "Placeholder"

      - name: Upload coverage
        if: matrix.python-version == env.STABLE_PYTHON_VERSION && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24  # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f  # v1.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  typecheck:
    name: Typecheck

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb  # v6.1.0
        with:
          enable-cache: true

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install hatch
        run: uv tool install hatch

      - name: Typecheck
        run: |-
          while IFS=$'\n' read -r line || ! retval=$line; do
            if ! echo "$line" | jq -e . 2>/dev/null 1>&2; then
              continue
            fi

            file=$(echo "$line" | jq -r '.file')
            line_number=$(echo "$line" | jq -r '.line')
            column=$(echo "$line" | jq -r '.column')
            message=$(echo "$line" | jq -r '.message')
            code=$(echo "$line" | jq -r '.code')
            severity=$(echo "$line" | jq -r '.severity')

            if [ "$severity" == "error" ]; then
              echo "::error file=$file,line=$line_number,col=$column,title=$code::$message"
            else
              echo "::notice file=$file,line=$line_number,col=$column,title=$code::$message"
            fi
          done < <(
            hatch run typecheck --output json
            printf '%s' "$?"
          )

          exit "$retval"
